>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Usage:

Test_0
    >>> matrix_mul([[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]], [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]])
    [[3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3]]
    >>> matrix_mul([[1.0, 1.0, 1.0], [1.0, 1.0, 1.0], [1.0, 1.0, 1.0], [1.0, 1.0, 1.0]], [[1.0, 1.0, 1.0, 1.0], [1.0, 1.0, 1.0, 1.0], [1.0, 1.0, 1.0, 1.0]])
    [[3.0, 3.0, 3.0, 3.0], [3.0, 3.0, 3.0, 3.0], [3.0, 3.0, 3.0, 3.0], [3.0, 3.0, 3.0, 3.0]]
    >>> matrix_mul([[-1.0, -1.0, -1.0], [-1.0, -1.0, -1.0], [-1.0, -1.0, -1.0], [-1.0, -1.0, -1.0]], [[-1.0, -1.0, -1.0, -1.0], [-1.0, -1.0, -1.0, -1.0], [-1.0, -1.0, -1.0, -1.0]])
    [[3.0, 3.0, 3.0, 3.0], [3.0, 3.0, 3.0, 3.0], [3.0, 3.0, 3.0, 3.0], [3.0, 3.0, 3.0, 3.0]]
    >>> matrix_mul([[2, 3], [3, 4], [1, 2]], [[1, 1, 1, 1], [1, 1, 1, 0]])
    [[5, 5, 5, 2], [7, 7, 7, 3], [3, 3, 3, 1]]

Test_1
    >>> first_matrix = "names"
    >>> second_matrix = [[1, 2, 3], [1, 2, 3]]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

Test_2
    >>> first_matrix = [[1, 5, 3], [1, 4, 3]]
    >>> second_matrix = "strings"
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list

Test_3
    >>> first_matrix = "strings"
    >>> second_matrix = "str"
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

Test_4
    >>> first_matrix = [3, 2, 5, 7]
    >>> second_matrix = [[1, 2, 4], [1, 2, 5]]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists

Test_5
    >>> first_matrix = [[1, 2, 3], [1, 2, 3]]
    >>> second_matrix = [2, 3, 4, 5]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list of lists

Test_6
    >>> first_matrix = [2, 3, 3, 8]
    >>> second_matrix = [2, 1, 3, 9]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists

Test_7
    >>> first_matrix = []
    >>> second_matrix = [[1, 2, 3], [1, 2, 3]]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

Test_8
    >>> first_matrix = [[]]
    >>> second_matrix = [[1, 2, 3], [1, 2, 3]]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

Test_9
    >>> first_matrix = [[1, 2, 3], [1, 2, 3]]
    >>> second_matrix = []
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty

Test_10
    >>> first_matrix = [[1, 2, 3], [1, 2, 3]]
    >>> second_matrix = [[]]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty

Test_11
    >>> first_matrix = []
    >>> second_matrix = []
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

Test_12
    >>> first_matrix = []
    >>> second_matrix = [[]]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

Test_13
    >>> first_matrix = [[]]
    >>> second_matrix = []
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

Test_14
    >>> first_matrix = [[]]
    >>> second_matrix = [[]]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

Test_15
    >>> first_matrix = [[1, 2, "h"], [2, 3, 4]]
    >>> second_matrix = [[2, 2], [3, 1], [4, 2]]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

Test_16
    >>> first_matrix = [[1, 2, 3], [2, 3, 4]]
    >>> second_matrix = [[2, "2"], [3, 1], [4, 2]]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

Test_17
    >>> first_matrix = [[1, 2, "3"], [2, 3, 4]]
    >>> second_matrix = [[2, "2"], [3, 1], [4, 2]]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

Test_18
    >>> first_matrix = [[1, 2, 3], [2, 3]]
    >>> second_matrix = [[1, 2], [2, 3], [2, 2]]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

Test_19
    >>> first_matrix = [[1, 2], [2, 3], [2, 2]]
    >>> second_matrix = [[2, 3, 4, 5], [2, 3]]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    TypeError: each row of m_b must be of the same size

Test_20
    >>> first_matrix = [[1, 2], [2, 3, 3], [2, 2]]
    >>> second_matrix = [[2, 3, 4, 5], [2, 3]]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

Test_21
    >>> first_matrix = [[1, 2], [2, 3], [3, 2]]
    >>> second_matrix = [[2, 3], [3,2], [2, 2]]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied

Test_0
    >>> first_matrix = None
    >>> second_matrix = [[1, 2, 3], [2, 3, 4]]
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    TypeError: m_a must be a list

Test_1
    >>> first_matrix = [[1, 2, 3], [2, 3, 4]]
    >>> second_matrix = None
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    TypeError: m_b must be a list

Test_2
    >>> first_matrix = None
    >>> second_matrix = None
    >>> matrix_mul(first_matrix, second_matrix)
    Traceback (most recent call last):
    TypeError: m_a must be a list

Test_3
    >>> print(matrix_mul([[1, 2, 3], [1, 2, 3]]))
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

Test_4
    >>> print(matrix_mul())
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
